// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/note/note.proto

package note

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to store or update a secure note.
type StoreNoteV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Note data to store.
	Note          *NoteData `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreNoteV1Request) Reset() {
	*x = StoreNoteV1Request{}
	mi := &file_proto_note_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreNoteV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreNoteV1Request) ProtoMessage() {}

func (x *StoreNoteV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreNoteV1Request.ProtoReflect.Descriptor instead.
func (*StoreNoteV1Request) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{0}
}

func (x *StoreNoteV1Request) GetNote() *NoteData {
	if x != nil {
		return x.Note
	}
	return nil
}

// Response after storing a note.
type StoreNoteV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the newly created or updated note.
	NoteId        string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreNoteV1Response) Reset() {
	*x = StoreNoteV1Response{}
	mi := &file_proto_note_note_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreNoteV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreNoteV1Response) ProtoMessage() {}

func (x *StoreNoteV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreNoteV1Response.ProtoReflect.Descriptor instead.
func (*StoreNoteV1Response) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{1}
}

func (x *StoreNoteV1Response) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Request to get all stored notes.
type GetNotesV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotesV1Request) Reset() {
	*x = GetNotesV1Request{}
	mi := &file_proto_note_note_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotesV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotesV1Request) ProtoMessage() {}

func (x *GetNotesV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotesV1Request.ProtoReflect.Descriptor instead.
func (*GetNotesV1Request) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{2}
}

// Response containing a list of all stored notes.
type GetNotesV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of notes.
	Notes         []*NoteData `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotesV1Response) Reset() {
	*x = GetNotesV1Response{}
	mi := &file_proto_note_note_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotesV1Response) ProtoMessage() {}

func (x *GetNotesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotesV1Response.ProtoReflect.Descriptor instead.
func (*GetNotesV1Response) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotesV1Response) GetNotes() []*NoteData {
	if x != nil {
		return x.Notes
	}
	return nil
}

// Request to retrieve a single note.
type GetNoteV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the note to retrieve (UUID format).
	NoteId        string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteV1Request) Reset() {
	*x = GetNoteV1Request{}
	mi := &file_proto_note_note_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteV1Request) ProtoMessage() {}

func (x *GetNoteV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteV1Request.ProtoReflect.Descriptor instead.
func (*GetNoteV1Request) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{4}
}

func (x *GetNoteV1Request) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Response containing the note and its last update timestamp.
type GetNoteV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Retrieved note data.
	Note *NoteData `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	// Timestamp of the most recent update.
	LastUpdate    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteV1Response) Reset() {
	*x = GetNoteV1Response{}
	mi := &file_proto_note_note_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteV1Response) ProtoMessage() {}

func (x *GetNoteV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteV1Response.ProtoReflect.Descriptor instead.
func (*GetNoteV1Response) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{5}
}

func (x *GetNoteV1Response) GetNote() *NoteData {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *GetNoteV1Response) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

// Request to delete a note.
type DeleteNoteV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the note to delete (UUID format).
	NoteId        string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteV1Request) Reset() {
	*x = DeleteNoteV1Request{}
	mi := &file_proto_note_note_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteV1Request) ProtoMessage() {}

func (x *DeleteNoteV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteV1Request.ProtoReflect.Descriptor instead.
func (*DeleteNoteV1Request) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNoteV1Request) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Response after deleting a note.
type DeleteNoteV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the note was successfully deleted.
	Ok            bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteV1Response) Reset() {
	*x = DeleteNoteV1Response{}
	mi := &file_proto_note_note_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteV1Response) ProtoMessage() {}

func (x *DeleteNoteV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteV1Response.ProtoReflect.Descriptor instead.
func (*DeleteNoteV1Response) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteNoteV1Response) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// Data structure representing a secure note.
type NoteData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Content of the note (minimum 3 characters).
	Content       string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteData) Reset() {
	*x = NoteData{}
	mi := &file_proto_note_note_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteData) ProtoMessage() {}

func (x *NoteData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteData.ProtoReflect.Descriptor instead.
func (*NoteData) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{8}
}

func (x *NoteData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_proto_note_note_proto protoreflect.FileDescriptor

var file_proto_note_note_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x2f, 0x6e, 0x6f, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3e, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x22, 0x2e, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07,
	0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22,
	0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e,
	0x4e, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x6e,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x2d, 0x0a,
	0x08, 0x4e, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x10, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xc7, 0x02, 0x0a,
	0x0b, 0x4e, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x65, 0x73, 0x56, 0x31, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x56, 0x31, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x95, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x09, 0x4e, 0x6f, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x70, 0x61, 0x76, 0x6c, 0x6f, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0xa2, 0x02, 0x03, 0x50, 0x4e, 0x58, 0xaa, 0x02, 0x0a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0xca, 0x02, 0x0a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x5c, 0x4e, 0x6f, 0x74, 0x65, 0xe2, 0x02, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c,
	0x4e, 0x6f, 0x74, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x3a, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_note_note_proto_rawDescOnce sync.Once
	file_proto_note_note_proto_rawDescData []byte
)

func file_proto_note_note_proto_rawDescGZIP() []byte {
	file_proto_note_note_proto_rawDescOnce.Do(func() {
		file_proto_note_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_note_note_proto_rawDesc), len(file_proto_note_note_proto_rawDesc)))
	})
	return file_proto_note_note_proto_rawDescData
}

var file_proto_note_note_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_note_note_proto_goTypes = []any{
	(*StoreNoteV1Request)(nil),    // 0: proto.note.StoreNoteV1Request
	(*StoreNoteV1Response)(nil),   // 1: proto.note.StoreNoteV1Response
	(*GetNotesV1Request)(nil),     // 2: proto.note.GetNotesV1Request
	(*GetNotesV1Response)(nil),    // 3: proto.note.GetNotesV1Response
	(*GetNoteV1Request)(nil),      // 4: proto.note.GetNoteV1Request
	(*GetNoteV1Response)(nil),     // 5: proto.note.GetNoteV1Response
	(*DeleteNoteV1Request)(nil),   // 6: proto.note.DeleteNoteV1Request
	(*DeleteNoteV1Response)(nil),  // 7: proto.note.DeleteNoteV1Response
	(*NoteData)(nil),              // 8: proto.note.NoteData
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_proto_note_note_proto_depIdxs = []int32{
	8, // 0: proto.note.StoreNoteV1Request.note:type_name -> proto.note.NoteData
	8, // 1: proto.note.GetNotesV1Response.notes:type_name -> proto.note.NoteData
	8, // 2: proto.note.GetNoteV1Response.note:type_name -> proto.note.NoteData
	9, // 3: proto.note.GetNoteV1Response.last_update:type_name -> google.protobuf.Timestamp
	0, // 4: proto.note.NoteService.StoreNoteV1:input_type -> proto.note.StoreNoteV1Request
	4, // 5: proto.note.NoteService.GetNoteV1:input_type -> proto.note.GetNoteV1Request
	2, // 6: proto.note.NoteService.GetNotesV1:input_type -> proto.note.GetNotesV1Request
	6, // 7: proto.note.NoteService.DeleteNoteV1:input_type -> proto.note.DeleteNoteV1Request
	1, // 8: proto.note.NoteService.StoreNoteV1:output_type -> proto.note.StoreNoteV1Response
	5, // 9: proto.note.NoteService.GetNoteV1:output_type -> proto.note.GetNoteV1Response
	3, // 10: proto.note.NoteService.GetNotesV1:output_type -> proto.note.GetNotesV1Response
	7, // 11: proto.note.NoteService.DeleteNoteV1:output_type -> proto.note.DeleteNoteV1Response
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_note_note_proto_init() }
func file_proto_note_note_proto_init() {
	if File_proto_note_note_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_note_note_proto_rawDesc), len(file_proto_note_note_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_note_note_proto_goTypes,
		DependencyIndexes: file_proto_note_note_proto_depIdxs,
		MessageInfos:      file_proto_note_note_proto_msgTypes,
	}.Build()
	File_proto_note_note_proto = out.File
	file_proto_note_note_proto_goTypes = nil
	file_proto_note_note_proto_depIdxs = nil
}
