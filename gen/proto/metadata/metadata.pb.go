// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/metadata/metadata.proto

package metadata

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for adding or updating metadata.
type AddMetaInfoV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the item to attach metadata to.
	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Key-value pairs of metadata to store or update.
	Metadata      map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMetaInfoV1Request) Reset() {
	*x = AddMetaInfoV1Request{}
	mi := &file_proto_metadata_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMetaInfoV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMetaInfoV1Request) ProtoMessage() {}

func (x *AddMetaInfoV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metadata_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMetaInfoV1Request.ProtoReflect.Descriptor instead.
func (*AddMetaInfoV1Request) Descriptor() ([]byte, []int) {
	return file_proto_metadata_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *AddMetaInfoV1Request) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *AddMetaInfoV1Request) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response message confirming metadata addition or update.
type AddMetaInfoV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the operation was successful.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMetaInfoV1Response) Reset() {
	*x = AddMetaInfoV1Response{}
	mi := &file_proto_metadata_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMetaInfoV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMetaInfoV1Response) ProtoMessage() {}

func (x *AddMetaInfoV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metadata_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMetaInfoV1Response.ProtoReflect.Descriptor instead.
func (*AddMetaInfoV1Response) Descriptor() ([]byte, []int) {
	return file_proto_metadata_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *AddMetaInfoV1Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for removing a specific metadata key from an item.
type RemoveMetaInfoV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the item whose metadata is being modified.
	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Metadata key to remove (must be non-empty).
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveMetaInfoV1Request) Reset() {
	*x = RemoveMetaInfoV1Request{}
	mi := &file_proto_metadata_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMetaInfoV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMetaInfoV1Request) ProtoMessage() {}

func (x *RemoveMetaInfoV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metadata_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMetaInfoV1Request.ProtoReflect.Descriptor instead.
func (*RemoveMetaInfoV1Request) Descriptor() ([]byte, []int) {
	return file_proto_metadata_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveMetaInfoV1Request) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *RemoveMetaInfoV1Request) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Response message confirming metadata removal.
type RemoveMetaInfoV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the metadata was successfully removed.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveMetaInfoV1Response) Reset() {
	*x = RemoveMetaInfoV1Response{}
	mi := &file_proto_metadata_metadata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMetaInfoV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMetaInfoV1Response) ProtoMessage() {}

func (x *RemoveMetaInfoV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metadata_metadata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMetaInfoV1Response.ProtoReflect.Descriptor instead.
func (*RemoveMetaInfoV1Response) Descriptor() ([]byte, []int) {
	return file_proto_metadata_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveMetaInfoV1Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for retrieving all metadata associated with an item.
type GetMetaInfoV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the item to fetch metadata for.
	ItemId        string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaInfoV1Request) Reset() {
	*x = GetMetaInfoV1Request{}
	mi := &file_proto_metadata_metadata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaInfoV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaInfoV1Request) ProtoMessage() {}

func (x *GetMetaInfoV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metadata_metadata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaInfoV1Request.ProtoReflect.Descriptor instead.
func (*GetMetaInfoV1Request) Descriptor() ([]byte, []int) {
	return file_proto_metadata_metadata_proto_rawDescGZIP(), []int{4}
}

func (x *GetMetaInfoV1Request) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

// Response containing all metadata for a given item.
type GetMetaInfoV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All key-value metadata pairs.
	Metadata      map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaInfoV1Response) Reset() {
	*x = GetMetaInfoV1Response{}
	mi := &file_proto_metadata_metadata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaInfoV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaInfoV1Response) ProtoMessage() {}

func (x *GetMetaInfoV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metadata_metadata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaInfoV1Response.ProtoReflect.Descriptor instead.
func (*GetMetaInfoV1Response) Descriptor() ([]byte, []int) {
	return file_proto_metadata_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *GetMetaInfoV1Response) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_metadata_metadata_proto protoreflect.FileDescriptor

var file_proto_metadata_metadata_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31, 0x0a,
	0x15, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x57, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x18, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x39, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0xb4, 0x02, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb1, 0x01, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x70,
	0x61, 0x76, 0x6c, 0x6f, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xa2, 0x02, 0x03, 0x50, 0x4d, 0x58, 0xaa, 0x02, 0x0e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xca, 0x02, 0x0e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xe2, 0x02,
	0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x3a, 0x3a, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_metadata_metadata_proto_rawDescOnce sync.Once
	file_proto_metadata_metadata_proto_rawDescData []byte
)

func file_proto_metadata_metadata_proto_rawDescGZIP() []byte {
	file_proto_metadata_metadata_proto_rawDescOnce.Do(func() {
		file_proto_metadata_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_metadata_metadata_proto_rawDesc), len(file_proto_metadata_metadata_proto_rawDesc)))
	})
	return file_proto_metadata_metadata_proto_rawDescData
}

var file_proto_metadata_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_metadata_metadata_proto_goTypes = []any{
	(*AddMetaInfoV1Request)(nil),     // 0: proto.metadata.AddMetaInfoV1Request
	(*AddMetaInfoV1Response)(nil),    // 1: proto.metadata.AddMetaInfoV1Response
	(*RemoveMetaInfoV1Request)(nil),  // 2: proto.metadata.RemoveMetaInfoV1Request
	(*RemoveMetaInfoV1Response)(nil), // 3: proto.metadata.RemoveMetaInfoV1Response
	(*GetMetaInfoV1Request)(nil),     // 4: proto.metadata.GetMetaInfoV1Request
	(*GetMetaInfoV1Response)(nil),    // 5: proto.metadata.GetMetaInfoV1Response
	nil,                              // 6: proto.metadata.AddMetaInfoV1Request.MetadataEntry
	nil,                              // 7: proto.metadata.GetMetaInfoV1Response.MetadataEntry
}
var file_proto_metadata_metadata_proto_depIdxs = []int32{
	6, // 0: proto.metadata.AddMetaInfoV1Request.metadata:type_name -> proto.metadata.AddMetaInfoV1Request.MetadataEntry
	7, // 1: proto.metadata.GetMetaInfoV1Response.metadata:type_name -> proto.metadata.GetMetaInfoV1Response.MetadataEntry
	0, // 2: proto.metadata.MetadataService.AddMetaInfoV1:input_type -> proto.metadata.AddMetaInfoV1Request
	2, // 3: proto.metadata.MetadataService.RemoveMetaInfoV1:input_type -> proto.metadata.RemoveMetaInfoV1Request
	4, // 4: proto.metadata.MetadataService.GetMetaInfoV1:input_type -> proto.metadata.GetMetaInfoV1Request
	1, // 5: proto.metadata.MetadataService.AddMetaInfoV1:output_type -> proto.metadata.AddMetaInfoV1Response
	3, // 6: proto.metadata.MetadataService.RemoveMetaInfoV1:output_type -> proto.metadata.RemoveMetaInfoV1Response
	5, // 7: proto.metadata.MetadataService.GetMetaInfoV1:output_type -> proto.metadata.GetMetaInfoV1Response
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_metadata_metadata_proto_init() }
func file_proto_metadata_metadata_proto_init() {
	if File_proto_metadata_metadata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_metadata_metadata_proto_rawDesc), len(file_proto_metadata_metadata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_metadata_metadata_proto_goTypes,
		DependencyIndexes: file_proto_metadata_metadata_proto_depIdxs,
		MessageInfos:      file_proto_metadata_metadata_proto_msgTypes,
	}.Build()
	File_proto_metadata_metadata_proto = out.File
	file_proto_metadata_metadata_proto_goTypes = nil
	file_proto_metadata_metadata_proto_depIdxs = nil
}
