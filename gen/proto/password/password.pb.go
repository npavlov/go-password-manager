// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/password/password.proto

package password

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to store a new password.
type StorePasswordV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Password data to store.
	Password      *PasswordData `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorePasswordV1Request) Reset() {
	*x = StorePasswordV1Request{}
	mi := &file_proto_password_password_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorePasswordV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorePasswordV1Request) ProtoMessage() {}

func (x *StorePasswordV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorePasswordV1Request.ProtoReflect.Descriptor instead.
func (*StorePasswordV1Request) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{0}
}

func (x *StorePasswordV1Request) GetPassword() *PasswordData {
	if x != nil {
		return x.Password
	}
	return nil
}

// Response containing the ID of the stored password.
type StorePasswordV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID of the stored password entry.
	PasswordId    string `protobuf:"bytes,1,opt,name=password_id,json=passwordId,proto3" json:"password_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorePasswordV1Response) Reset() {
	*x = StorePasswordV1Response{}
	mi := &file_proto_password_password_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorePasswordV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorePasswordV1Response) ProtoMessage() {}

func (x *StorePasswordV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorePasswordV1Response.ProtoReflect.Descriptor instead.
func (*StorePasswordV1Response) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{1}
}

func (x *StorePasswordV1Response) GetPasswordId() string {
	if x != nil {
		return x.PasswordId
	}
	return ""
}

// Request to retrieve all passwords.
type GetPasswordsV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPasswordsV1Request) Reset() {
	*x = GetPasswordsV1Request{}
	mi := &file_proto_password_password_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasswordsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordsV1Request) ProtoMessage() {}

func (x *GetPasswordsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordsV1Request.ProtoReflect.Descriptor instead.
func (*GetPasswordsV1Request) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{2}
}

// Response containing a list of all stored passwords.
type GetPasswordsV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of password entries.
	Passwords     []*PasswordData `protobuf:"bytes,1,rep,name=passwords,proto3" json:"passwords,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPasswordsV1Response) Reset() {
	*x = GetPasswordsV1Response{}
	mi := &file_proto_password_password_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasswordsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordsV1Response) ProtoMessage() {}

func (x *GetPasswordsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordsV1Response.ProtoReflect.Descriptor instead.
func (*GetPasswordsV1Response) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{3}
}

func (x *GetPasswordsV1Response) GetPasswords() []*PasswordData {
	if x != nil {
		return x.Passwords
	}
	return nil
}

// Request to retrieve a specific password by ID.
type GetPasswordV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the password entry to retrieve.
	PasswordId    string `protobuf:"bytes,1,opt,name=password_id,json=passwordId,proto3" json:"password_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPasswordV1Request) Reset() {
	*x = GetPasswordV1Request{}
	mi := &file_proto_password_password_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasswordV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordV1Request) ProtoMessage() {}

func (x *GetPasswordV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordV1Request.ProtoReflect.Descriptor instead.
func (*GetPasswordV1Request) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{4}
}

func (x *GetPasswordV1Request) GetPasswordId() string {
	if x != nil {
		return x.PasswordId
	}
	return ""
}

// Response containing the password entry and its last update time.
type GetPasswordV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Password data.
	Password *PasswordData `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	// Last time the password entry was updated.
	LastUpdate    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPasswordV1Response) Reset() {
	*x = GetPasswordV1Response{}
	mi := &file_proto_password_password_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasswordV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswordV1Response) ProtoMessage() {}

func (x *GetPasswordV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswordV1Response.ProtoReflect.Descriptor instead.
func (*GetPasswordV1Response) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{5}
}

func (x *GetPasswordV1Response) GetPassword() *PasswordData {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *GetPasswordV1Response) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

// Request to update a password entry.
type UpdatePasswordV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the password entry to update.
	PasswordId string `protobuf:"bytes,1,opt,name=password_id,json=passwordId,proto3" json:"password_id,omitempty"`
	// New password data to store.
	Data          *PasswordData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePasswordV1Request) Reset() {
	*x = UpdatePasswordV1Request{}
	mi := &file_proto_password_password_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasswordV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordV1Request) ProtoMessage() {}

func (x *UpdatePasswordV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordV1Request.ProtoReflect.Descriptor instead.
func (*UpdatePasswordV1Request) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePasswordV1Request) GetPasswordId() string {
	if x != nil {
		return x.PasswordId
	}
	return ""
}

func (x *UpdatePasswordV1Request) GetData() *PasswordData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Response containing the ID of the updated password.
type UpdatePasswordV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the updated password entry.
	PasswordId    string `protobuf:"bytes,1,opt,name=password_id,json=passwordId,proto3" json:"password_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePasswordV1Response) Reset() {
	*x = UpdatePasswordV1Response{}
	mi := &file_proto_password_password_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasswordV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordV1Response) ProtoMessage() {}

func (x *UpdatePasswordV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordV1Response.ProtoReflect.Descriptor instead.
func (*UpdatePasswordV1Response) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePasswordV1Response) GetPasswordId() string {
	if x != nil {
		return x.PasswordId
	}
	return ""
}

// Request to delete a password entry.
type DeletePasswordV1Request struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the password entry to delete.
	PasswordId    string `protobuf:"bytes,1,opt,name=password_id,json=passwordId,proto3" json:"password_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePasswordV1Request) Reset() {
	*x = DeletePasswordV1Request{}
	mi := &file_proto_password_password_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePasswordV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePasswordV1Request) ProtoMessage() {}

func (x *DeletePasswordV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePasswordV1Request.ProtoReflect.Descriptor instead.
func (*DeletePasswordV1Request) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePasswordV1Request) GetPasswordId() string {
	if x != nil {
		return x.PasswordId
	}
	return ""
}

// Response confirming the deletion status.
type DeletePasswordV1Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the password was successfully deleted.
	Ok            bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePasswordV1Response) Reset() {
	*x = DeletePasswordV1Response{}
	mi := &file_proto_password_password_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePasswordV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePasswordV1Response) ProtoMessage() {}

func (x *DeletePasswordV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePasswordV1Response.ProtoReflect.Descriptor instead.
func (*DeletePasswordV1Response) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePasswordV1Response) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// PasswordData represents the structure of a stored credential.
type PasswordData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Login or username (minimum 3 characters).
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Password value (minimum 3 characters).
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Optional metadata (e.g., website, category, custom tags).
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswordData) Reset() {
	*x = PasswordData{}
	mi := &file_proto_password_password_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordData) ProtoMessage() {}

func (x *PasswordData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_password_password_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordData.ProtoReflect.Descriptor instead.
func (*PasswordData) Descriptor() ([]byte, []int) {
	return file_proto_password_password_proto_rawDescGZIP(), []int{10}
}

func (x *PasswordData) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PasswordData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PasswordData) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_password_password_proto protoreflect.FileDescriptor

var file_proto_password_password_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a,
	0x16, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3a, 0x0a, 0x17, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x0a, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0xd7, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x03,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x10, 0x03, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x46, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x32, 0x82, 0x04, 0x0a, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x31, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x12, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x65, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x56, 0x31, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb1, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x70, 0x61, 0x76, 0x6c,
	0x6f, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2d, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0xa2, 0x02, 0x03, 0x50, 0x50, 0x58, 0xaa, 0x02, 0x0e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0xca, 0x02, 0x0e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x5c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0xe2, 0x02, 0x1a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x3a, 0x3a, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_proto_password_password_proto_rawDescOnce sync.Once
	file_proto_password_password_proto_rawDescData []byte
)

func file_proto_password_password_proto_rawDescGZIP() []byte {
	file_proto_password_password_proto_rawDescOnce.Do(func() {
		file_proto_password_password_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_password_password_proto_rawDesc), len(file_proto_password_password_proto_rawDesc)))
	})
	return file_proto_password_password_proto_rawDescData
}

var file_proto_password_password_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_password_password_proto_goTypes = []any{
	(*StorePasswordV1Request)(nil),   // 0: proto.password.StorePasswordV1Request
	(*StorePasswordV1Response)(nil),  // 1: proto.password.StorePasswordV1Response
	(*GetPasswordsV1Request)(nil),    // 2: proto.password.GetPasswordsV1Request
	(*GetPasswordsV1Response)(nil),   // 3: proto.password.GetPasswordsV1Response
	(*GetPasswordV1Request)(nil),     // 4: proto.password.GetPasswordV1Request
	(*GetPasswordV1Response)(nil),    // 5: proto.password.GetPasswordV1Response
	(*UpdatePasswordV1Request)(nil),  // 6: proto.password.UpdatePasswordV1Request
	(*UpdatePasswordV1Response)(nil), // 7: proto.password.UpdatePasswordV1Response
	(*DeletePasswordV1Request)(nil),  // 8: proto.password.DeletePasswordV1Request
	(*DeletePasswordV1Response)(nil), // 9: proto.password.DeletePasswordV1Response
	(*PasswordData)(nil),             // 10: proto.password.PasswordData
	nil,                              // 11: proto.password.PasswordData.MetadataEntry
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
}
var file_proto_password_password_proto_depIdxs = []int32{
	10, // 0: proto.password.StorePasswordV1Request.password:type_name -> proto.password.PasswordData
	10, // 1: proto.password.GetPasswordsV1Response.passwords:type_name -> proto.password.PasswordData
	10, // 2: proto.password.GetPasswordV1Response.password:type_name -> proto.password.PasswordData
	12, // 3: proto.password.GetPasswordV1Response.last_update:type_name -> google.protobuf.Timestamp
	10, // 4: proto.password.UpdatePasswordV1Request.data:type_name -> proto.password.PasswordData
	11, // 5: proto.password.PasswordData.metadata:type_name -> proto.password.PasswordData.MetadataEntry
	0,  // 6: proto.password.PasswordService.StorePasswordV1:input_type -> proto.password.StorePasswordV1Request
	4,  // 7: proto.password.PasswordService.GetPasswordV1:input_type -> proto.password.GetPasswordV1Request
	2,  // 8: proto.password.PasswordService.GetPasswordsV1:input_type -> proto.password.GetPasswordsV1Request
	6,  // 9: proto.password.PasswordService.UpdatePasswordV1:input_type -> proto.password.UpdatePasswordV1Request
	8,  // 10: proto.password.PasswordService.DeletePasswordV1:input_type -> proto.password.DeletePasswordV1Request
	1,  // 11: proto.password.PasswordService.StorePasswordV1:output_type -> proto.password.StorePasswordV1Response
	5,  // 12: proto.password.PasswordService.GetPasswordV1:output_type -> proto.password.GetPasswordV1Response
	3,  // 13: proto.password.PasswordService.GetPasswordsV1:output_type -> proto.password.GetPasswordsV1Response
	7,  // 14: proto.password.PasswordService.UpdatePasswordV1:output_type -> proto.password.UpdatePasswordV1Response
	9,  // 15: proto.password.PasswordService.DeletePasswordV1:output_type -> proto.password.DeletePasswordV1Response
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_password_password_proto_init() }
func file_proto_password_password_proto_init() {
	if File_proto_password_password_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_password_password_proto_rawDesc), len(file_proto_password_password_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_password_password_proto_goTypes,
		DependencyIndexes: file_proto_password_password_proto_depIdxs,
		MessageInfos:      file_proto_password_password_proto_msgTypes,
	}.Build()
	File_proto_password_password_proto = out.File
	file_proto_password_password_proto_goTypes = nil
	file_proto_password_password_proto_depIdxs = nil
}
